col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=15, col="black",
main="Probability of false rejection versus p", xlab="p", xlim=c(0,0.05),
ylab="Type I Error", lwd=2)
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
lines(1-(1-(1-0.95)/p)**p,type="l",col="blue",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=18, col="black",
main="Probability of false rejection versus p", xlab="p", xlim=c(0,0.05),
ylab="Type I Error", lwd=2)
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
lines(1-(1-(1-0.95)/p)**p,type="l",col="blue",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=18, col="black",
main="Probability of false rejection versus p", xlab="p",
ylab="Type I Error", lwd=2)
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
lines(1-(1-(1-0.95)/p)**p,type="l",col="blue",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=18, col="black",
main="Probability of false rejection versus p", xlab="p",ylim=c(0,0.05)
ylab="Type I Error", lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=18, col="black",
main="Probability of false rejection versus p", xlab="p",ylim=c(0,0.05),
ylab="Type I Error", lwd=2)
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
lines(1-(1-(1-0.95)/p)**p,type="l",col="blue",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=18, col="black",
main="Probability of false rejection versus p", xlab="p",ylim=c(0,0.05),
ylab="Type I Error", lwd=2)
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
lines(p, 1-(1-(1-0.95)/p)**p,type="l",col="blue",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(prob_error[2,],type="l",pch=18, col="black",
main="Probability of false rejection versus p", xlab="p",ylim=c(0,0.055),
ylab="Type I Error", lwd=2)
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
lines(p, 1-(1-(1-0.95)/p)**p,type="l",col="blue",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p, 1-(1-(1-0.95)/p)**p,
main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0,0.05), col="blue")
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
p=seq(1, 10, by=1)
plot(p, 1-(1-(1-0.95)/p)**p,
main="Probability of false rejection versus p (0.95, Bonferroni correction)", ylab="Type I Error", type="l", col="blue")
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p, 1-(1-(1-0.95)/p)**p,
main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0,0.05), col="blue")
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
p1=seq(1, 10, by=1)
plot(p1, 1-(1-(1-0.95)/p1)**p1,
main="Probability of false rejection versus p (0.95, Bonferroni correction)", ylab="Type I Error", type="l", col="blue")
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p1, 1-(1-(1-0.95)/p1)**p1, main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0,0.05), col="blue")
lines(prob_error[3,],type="l",col="red",lwd=2)
lines(prob_error[4,],type="l",col="purple",lwd=2)
lines(prob_error[5,],type="l",col="green",lwd=2)
lines(prob_error[6,],type="l",col="orange",lwd=2)
legend("topright",legend=c("rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8","1.a"),
col=c("black","red","purple","green","orange","blue"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
rho_ls
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p1, 1-(1-(1-0.95)/p1)**p1, main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0,0.05), col="blue")
lines(prob_error[3,],type="l",col="red")
lines(prob_error[4,],type="l",col="purple")
lines(prob_error[5,],type="l",col="green")
lines(prob_error[6,],type="l",col="orange")
legend("topright",legend=c("1.a", "rho=0.","rho=0.2","rho=0.4","rho=0.6","rho=0.8"),
col=c("blue","red","purple","green","orange","black"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p1, 1-(1-(1-0.95)/p1)**p1, main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0,0.05), col="blue")
lines(prob_error[2,],type="l",col="red")
lines(prob_error[3,],type="l",col="purple")
lines(prob_error[4,],type="l",col="green")
lines(prob_error[5,],type="l",col="orange")
legend("topright",legend=c("1.a", "rho=0.2","rho=0.4","rho=0.6","rho=0.8","rho=1.0"),
col=c("blue","red","purple","green","orange","black"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p1, 1-(1-(1-0.95)/p1)**p1, main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0.01,0.05), col="blue")
lines(prob_error[2,],type="l",col="red")
lines(prob_error[3,],type="l",col="purple")
lines(prob_error[4,],type="l",col="green")
lines(prob_error[5,],type="l",col="orange")
legend("bottomleft",legend=c("1.a", "rho=0.2","rho=0.4","rho=0.6","rho=0.8","rho=1.0"),
col=c("blue","red","purple","green","orange","black"), lty=1,lwd=2)
N=20000
rho_ls=seq(0, 1, by=0.2)
p_ls=seq(1, 10, by=1)
prob_error=matrix(NA, nrow = length(rho_ls), ncol = length(p_ls))
i=1
for (rho in rho_ls) {
j=1
for (p in p_ls){
covmat=matrix(rep(rho, p*p), nrow=p, byrow=TRUE)
diag(covmat)=1
z=mvrnorm(n=N, mu=rep(0, p), Sigma=covmat)
c_value=qnorm(0.05/p,lower.tail = FALSE)
rej=z>c_value
rejcol=(rowSums(rej)==0)
prob_error[i,j]=1-sum(rejcol)/N
j=j+1
}
i=i+1
}
plot(p1, 1-(1-(1-0.95)/p1)**p1, main="Probability of false rejection versus p", ylab="Type I Error", type="l", xlab="p",ylim=c(0.02,0.05), col="blue")
lines(prob_error[2,],type="l",col="red")
lines(prob_error[3,],type="l",col="purple")
lines(prob_error[4,],type="l",col="green")
lines(prob_error[5,],type="l",col="orange")
legend("bottomleft",legend=c("1.a", "rho=0.2","rho=0.4","rho=0.6","rho=0.8","rho=1.0"),
col=c("blue","red","purple","green","orange","black"), lty=1,lwd=2)
plot(density(pvalue))
test.mat=model.matrix(Salary~.,data=Hitters[test,])
mse.test=rep(NA,3)
# MSE in c
coefc=coef(summary(reg.train))[order(pvalue, decreasing=FALSE)][1:7]
predc=test.mat[,names(sort(pvalue, decreasing=FALSE)[1:7])]%*%coefc
reg.train=glm(Salary~., data=Hitters[train,])
pvalue=coef(summary(reg.train))[, 4]
pvalue=sort(pvalue, decreasing=FALSE)
test.mat=model.matrix(Salary~.,data=Hitters[test,])
mse.test=rep(NA,3)
# MSE in c
coefc=coef(summary(reg.train))[order(pvalue, decreasing=FALSE)][1:7]
predc=test.mat[,names(sort(pvalue, decreasing=FALSE)[1:7])]%*%coefc
mse.test[1]=mean((Hitters$Salary[test]-predc)^2)
# MSE in d
coefd=coef(regfit.train.fwd, id=7)
predd=test.mat[,names(coefd)]%*%coefd
mse.test[2]=mean((Hitters$Salary[test]-predd)^2)
# MSE in e
coefe=coef(regfit.train, id=7)
prede=test.mat[,names(coefe)]%*%coefe
mse.test[3]=mean((Hitters$Salary[test]-prede)^2)
mse.test
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(leaps)
library(data.table)
setwd("/Users/hongjingpeng/Desktop/Machine Learning/Machine-Learning-2022W/PSet1")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(leaps)
library(data.table)
setwd("/Users/hongjingpeng/Desktop/Machine Learning/Machine-Learning-2022W/PSet1")
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
library(leaps)
library(data.table)
setwd("/Users/hongjingpeng/Desktop/Machine Learning/Machine-Learning-2022W/PSet1")
## Machine Learning Lab 1
## Author: Jingpeng Hong
## Date: Jan 29, 2022
## Housekeeping ##
#install.packages("stargazer")
#install.packages("ggplot2")
#install.packages("car")
library(ggplot2)
library(stargazer)
library(car)
rm(list=ls())
setwd("/Users/hongjingpeng/Desktop/Machine Learning/Machine-Learning-2022W/Lab1/")
########################
## Preparing the Data ##
########################
data=read.csv("IPUMS_data.csv")
crosswalk=read.csv("Crosswalk.csv", sep=";")
## Create continuous measurement of education
data = merge(x=data, y=crosswalk, by.x="EDUCD", by.y="educd", all.x=TRUE)
## Create dummy variables
data$hsdip = ifelse(data$EDUCD>=62 & data$EDUCD<=100, 1, 0) # dummy for high school diploma
data$coldip = ifelse(data$EDUCD>=101 & data$EDUCD<999, 1, 0) # dummy for four-year college diploma
data$white = ifelse(data$RACE==1, 1, 0) # dummy for white
data$black = ifelse(data$RACE==2, 1, 0) # dummy for black
data$hispanic = ifelse(data$HISPAN>=1 & data$HISPAN<=4, 1, 0) # dummy for Hispanic origin
data$married = ifelse(data$MARST>=1 & data$MARST<=3, 1, 0) # dummy for married
data$female = ifelse(data$SEX==2, 1, 0) # dummy for female
data$vet = ifelse(data$VETSTAT==2, 1, 0) # dummy for veteran
## Create interaction terms
data$hsdip_educdc = data$hsdip*data$educdc # interaction, high school diploma and years of education
data$coldip_educdc = data$coldip*data$educdc # interaction, college diploma and years of education
## Create other variables
data$age2 = data$AGE*data$AGE # age squared
data$lnincwage = log(data$INCWAGE+1) # natural log of incwage
###################
## Data Analysis ##
###################
## descriptive statistics
stargazer(data[c('YEAR', 'INCWAGE', 'lnincwage', 'educdc', 'female', 'AGE', 'age2',
'white', 'black', 'hispanic', 'married', 'NCHILD', 'vet', 'hsdip',
'coldip', 'hsdip_educdc', 'coldip_educdc')],
omit.summary.stat=c("p25", "p75"), digits=2, out="output/summary.tex")
## Scatter plot ln(incwage) and education with a linear fit line.
ggplot(data, aes(x=educdc,y=lnincwage)) +
geom_point(alpha=0.5, size=1.5, shape=1, fill = NA) +
labs(x= "Number of Education Years", y="log Wages")+
ggtitle("Wages by Number of Education Years") +
theme(plot.title = element_text(hjust = 0.5)) +
geom_smooth(method='lm', color='red', size=0.5)
ggsave("output/scatter_line.png", scale=1.5)
## Regression model estimation
model1 = lm(lnincwage~educdc+female+AGE+age2+white+black+hispanic+married+NCHILD+vet,
data=data) # Output combined with results in question 5
## Hypothesis Testing -3.b
linearHypothesis(model1, c('educdc', 'female', 'AGE', 'age2', 'white', 'black',
'hispanic', 'married', 'NCHILD', 'vet'))
## Hypothesis Testing -3.g
linearHypothesis(model1, c("white=0", "black=0", 'hispanic=0'))
## With no high school diploma/ High school diploma/ College degree
data$degree=0
data$degree[data$hsdip==1] = 1
data$degree[data$coldip==1] = 2
data$degree = factor(data$degree)
ggplot(data, aes(x=educdc,y=lnincwage, color=degree, shape=degree)) +
geom_point(alpha=0.5, size=1.5, shape=1, fill = NA) +
labs(x= "Number of Education Years", y="log Wages")+
ggtitle("Wages by Number of Education Years") +
scale_color_discrete(labels = c("With no high school diploma",
"High school diploma",
"College degree"))+
theme(plot.title = element_text(hjust = 0.5)) +
theme(legend.position = c(.15, .2), legend.title = element_blank())+
geom_smooth(method='lm')
ggsave("output/scatter_line_degree.png", scale=1.5)
## Model that will allow the returns to education to vary by degree acquired
model2 = lm(lnincwage~educdc+female+AGE+age2+white+black+hispanic+married+NCHILD+vet
+hsdip_educdc+coldip_educdc,
data=data)
stargazer(model1, model2, title="OLS Regression", align=TRUE, out="output/linear_reg.tex",
omit.stat=c("LL","ser"), no.space=TRUE)
model2 = lm(lnincwage~educdc+female+AGE+age2+white+black+hispanic+married+NCHILD+vet
+hsdip_educdc+coldip_educdc+hsdip+coldip,
data=data)
stargazer(model1, model2, title="OLS Regression", align=TRUE, out="output/linear_reg.tex",
omit.stat=c("LL","ser"), no.space=TRUE)
